<Window x:Class="PendulumApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="SharpGL WPF Application" Height="939" Width="1152"         
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"        
        xmlns:viewModel="clr-namespace:PendulumApp.ViewModel"
        xmlns:sharpGL="clr-namespace:SharpGL.WPF;assembly=SharpGL.WPF" 
        WindowState="Maximized"  Name="mainWindow">
    <Window.InputBindings>
        <KeyBinding Key="D" Modifiers="Control" Command="{Binding DebugEnableCommand}"/>
    </Window.InputBindings>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosing}" CommandParameter="{Binding}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <Image x:Key="Play" Height="50" Width="50" Opacity="{Binding PlayImageOpacity}" Name="imageButtonPlay" >
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Playing}" Value="False"/>
                                <Condition Binding="{Binding ElementName= buttonPlay_toolbar, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Start_Playing_Hovered.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Playing}" Value="False"/>
                                <Condition Binding="{Binding ElementName= buttonPlay_toolbar, Path=IsMouseOver}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Start_Playing.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Playing}" Value="True"/>
                                <Condition Binding="{Binding ElementName= buttonPlay_toolbar, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Stop_Playing_Hovered.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Playing}" Value="True"/>
                                <Condition Binding="{Binding ElementName= buttonPlay_toolbar, Path=IsMouseOver}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Stop_Playing.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Playing}" Value="True"/>
                                <Condition Binding="{Binding ElementName= buttonPlay_toolbar, Path=IsReleased}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Stop_Playing.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Playing}" Value="False"/>
                                <Condition Binding="{Binding ElementName= buttonPlay_toolbar, Path=IsReleased}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Start_Playing.png" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
        <Image x:Key="Record" Height="40" Width="40" Opacity="{Binding RecordImageOpacity}" Name="imageButtonRecord" >
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Recording}" Value="False"/>
                                <Condition Binding="{Binding ElementName= buttonRecord_toolbar, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Record_Hovered.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Recording}" Value="False"/>
                                <Condition Binding="{Binding ElementName= buttonRecord_toolbar, Path=IsMouseOver}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Record.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Recording}" Value="True"/>
                                <Condition Binding="{Binding ElementName= buttonRecord_toolbar, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Stop_Record_Hovered.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Recording}" Value="True"/>
                                <Condition Binding="{Binding ElementName= buttonRecord_toolbar, Path=IsMouseOver}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Stop_Record.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Recording}" Value="True"/>
                                <Condition Binding="{Binding ElementName= buttonRecord_toolbar, Path=IsReleased}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Stop_Record.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Recording}" Value="False"/>
                                <Condition Binding="{Binding ElementName= buttonRecord_toolbar, Path=IsReleased}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Record.png" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
        <Image x:Key="Calibrate" Height="50" Width="50" Opacity="{Binding CalibrateImageOpacity}" Name="imageButtonCalibrate" >
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName= buttonCalibrate_toolbar, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Calibrate_Hovered.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName= buttonCalibrate_toolbar, Path=IsMouseOver}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Source" Value="/PendulumApp;component/Images/Calibrate.png" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
        <Image x:Key="SetAxis1" Source="/PendulumApp;component/Images/Settings.png"  Height="10" Width="10" Name="imageButtonSetAxis1"/>
        <Image x:Key="SetAxis2" Source="/PendulumApp;component/Images/Settings.png"  Height="10" Width="10" Name="imageButtonSetAxis2"/>
        <Image x:Key="SetAxis3" Source="/PendulumApp;component/Images/Settings.png"  Height="10" Width="10" Name="imageButtonSetAxis3"/>
        <Image x:Key="SetAxis4" Source="/PendulumApp;component/Images/Settings.png"  Height="10" Width="10" Name="imageButtonSetAxis4"/>
        <Image x:Key="SetAxis5" Source="/PendulumApp;component/Images/Settings.png"  Height="10" Width="10" Name="imageButtonSetAxis5"/>
        <Image x:Key="SetAxis6" Source="/PendulumApp;component/Images/Settings.png"  Height="10" Width="10" Name="imageButtonSetAxis6"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
    </Window.Resources>
    <Grid>
        <StackPanel>
            <ToolBar Height="Auto" Name="mtoolBar" IsEnabled="True">
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Foreground" Value="Red"/>
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#FFADADAD"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToolBar.Resources>
                <Button  Height="60" Name="buttonPlay_toolbar" Command="{Binding PlayCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" Width="60" ToolTip="{Binding ButtonPlayTooltip}" IsEnabled="{Binding ButtonPlayIsEnabled}"  >
                    <Button.Content>
                        <DynamicResource ResourceKey="Play"/>
                    </Button.Content>
                </Button>
                <Button  Height="60" Name="buttonRecord_toolbar" Width="60" ToolTip="{Binding ButtonRecordTooltip}" IsEnabled="{Binding ButtonRecordIsEnabled}" Command="{Binding RecordCommand}">
                    <Button.Content>
                        <DynamicResource ResourceKey="Record"/>
                    </Button.Content>
                </Button>
                <Button  Height="60" Name="buttonCalibrate_toolbar" Width="60" ToolTip="{Binding ButtonCalibrateTooltip}" IsEnabled ="{Binding ButtonCalibrateIsEnabled}"  Command="{Binding CalibrateCommand}">
                    <Button.Content>
                        <DynamicResource ResourceKey="Calibrate"/>
                    </Button.Content>
                </Button>
                <Separator></Separator>
                <StackPanel>
                    <Label  Width="150" Height="30" FontWeight="Bold" Content="{Binding COMConnectionLabelText}" Foreground="{Binding COMConnectionLabelColor}" FontSize="14" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"  FontStretch="Normal" />
                    <Label  Width="150" Height="30" FontWeight="Bold" Content="{Binding BLEConnectionLabelText}" Foreground="{Binding BLEConnectionLabelColor}"  FontSize="14" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"  FontStretch="Normal" />
                </StackPanel>
                <ComboBox  ItemsSource="{Binding ComboBoxCOMPorts}" SelectedItem="{Binding ComboboxSelectedItem}" IsEnabled="{Binding ComboboxCOMPortsIsEnabled}" IsSynchronizedWithCurrentItem="True" Name="comboboxProfile_toolbar" Height="10" Width="150" BorderThickness="1" BorderBrush="Black"  ToolTip="Available COM ports" >

                </ComboBox>
                <Separator></Separator>
                <Label  Width="100" Height="40" Content="{Binding AccGy0StatusLabelText}" Foreground="{Binding AccGy0StatusLabelColor}" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  FontStretch="Normal" />
                <Separator></Separator>
                <Label  Width="100" Height="40" Content="{Binding AccGy1StatusLabelText}" Foreground="{Binding AccGy1StatusLabelColor}" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  FontStretch="Normal" />
                <Separator></Separator>
                <Label  Width="100" Height="40" Content="{Binding EMGStatusLabelText}" Foreground="{Binding EMGStatusLabelColor}" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  FontStretch="Normal" />
                <Separator></Separator>
                <Label  Width="100" Height="40" Content="{Binding BatteryStatusTextLabel}" Foreground="{Binding BatteryStatusLabelColor}" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  FontStretch="Normal" />
           
                
            </ToolBar>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="530"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <ToggleButton Width="50" Content="User1" IsChecked="{Binding ToogleButtonUser1IsChecked}"></ToggleButton>
                    <ToggleButton Width="50" Content="User2" IsChecked="{Binding ToogleButtonUser2IsChecked}"></ToggleButton>
                </StackPanel>
                <ScrollViewer Grid.Row="1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="150"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="150"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="150"/>
                            <RowDefinition Height="20"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Button  Height="15" Width="15" Grid.Row="2" Name="buttonSetAxis1"  ToolTip="Set Axis range" Command="{Binding SetAxis1Command}" IsEnabled ="{Binding ButtonSetAxis1IsEnabled}" 
                                 Visibility="{Binding Path=ButtonSetAxis1IsVisible, Converter={StaticResource BoolToVisConverter}}" >
                            <Button.Content>
                                <DynamicResource ResourceKey="SetAxis1" />
                            </Button.Content>
                        </Button>
                        
                        <Button  Height="15" Width="15" Grid.Row="2" Grid.Column="2" Name="buttonSetAxis2"  ToolTip="Set Axis range" Command="{Binding SetAxis2Command}" IsEnabled ="{Binding ButtonSetAxis2IsEnabled}" 
                                 Visibility="{Binding Path=ButtonSetAxis2IsVisible, Converter={StaticResource BoolToVisConverter}}" >
                            <Button.Content>
                                <DynamicResource ResourceKey="SetAxis2" />
                            </Button.Content>
                        </Button>
                        <Button  Height="15" Width="15" Grid.Row="4" Grid.Column="0" Name="buttonSetAxis3"  ToolTip="Set Axis range" Command="{Binding SetAxis3Command}" IsEnabled ="{Binding ButtonSetAxis3IsEnabled}"
                                 Visibility="{Binding Path=ButtonSetAxis3IsVisible, Converter={StaticResource BoolToVisConverter}}" >
                            <Button.Content>
                                <DynamicResource ResourceKey="SetAxis3" />
                            </Button.Content>
                        </Button>
                        <Button  Height="15" Width="15" Grid.Row="4" Grid.Column="2" Name="buttonSetAxis4"  ToolTip="Set Axis range" Command="{Binding SetAxis4Command}" IsEnabled ="{Binding ButtonSetAxis4IsEnabled}"
                                 Visibility="{Binding Path=ButtonSetAxis4IsVisible, Converter={StaticResource BoolToVisConverter}}" >
                            <Button.Content>
                                <DynamicResource ResourceKey="SetAxis4" />
                            </Button.Content>
                        </Button>
                        <Button  Height="15" Width="15" Grid.Row="6" Grid.Column="0" Name="buttonSetAxis5"  ToolTip="Set Axis range" Command="{Binding SetAxis5Command}" IsEnabled ="{Binding ButtonSetAxis5IsEnabled}"
                                 Visibility="{Binding Path=ButtonSetAxis5IsVisible, Converter={StaticResource BoolToVisConverter}}" >
                            <Button.Content>
                                <DynamicResource ResourceKey="SetAxis5" />
                            </Button.Content>
                        </Button>
                        <Button  Height="15" Width="15" Grid.Row="6" Grid.Column="2" Name="buttonSetAxis6"  ToolTip="Set Axis range" Command="{Binding SetAxis6Command}" IsEnabled ="{Binding ButtonSetAxis6IsEnabled}"
                                 Visibility="{Binding Path=ButtonSetAxis6IsVisible, Converter={StaticResource BoolToVisConverter}}" >
                            <Button.Content>
                                <DynamicResource ResourceKey="SetAxis6" />
                            </Button.Content>
                        </Button>

                        <TextBlock HorizontalAlignment="Center" Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" Height="Auto" FontWeight="Bold" FontFamily="Segoe UI" Name="textBlockTittleDisplay1" Text="{Binding LabelDisplay1Tittle}"/>
                        <TextBlock HorizontalAlignment="Center" Grid.Row="0" Grid.Column="3" VerticalAlignment="Top" Height="Auto" FontWeight="Bold" FontFamily="Segoe UI" Name="textBlockTittleDisplay2" Text="{Binding LabelDisplay2Tittle}"/>
                        <TextBlock HorizontalAlignment="Center" Grid.Row="2" Grid.Column="1" VerticalAlignment="Top" Height="Auto" FontWeight="Bold" FontFamily="Segoe UI" Name="textBlockTittleDisplay3" Text="{Binding LabelDisplay3Tittle}"/>
                        <TextBlock HorizontalAlignment="Center" Grid.Row="2" Grid.Column="3" VerticalAlignment="Top" Height="Auto" FontWeight="Bold" FontFamily="Segoe UI" Name="textBlockTittleDisplay4" Text="{Binding LabelDisplay4Tittle}"/>
                        <TextBlock HorizontalAlignment="Center" Grid.Row="4" Grid.Column="1" VerticalAlignment="Top" Height="Auto" FontWeight="Bold" FontFamily="Segoe UI" Name="textBlockTittleDisplay5" Text="{Binding LabelDisplay5Tittle}"/>
                        <TextBlock HorizontalAlignment="Center" Grid.Row="4" Grid.Column="3" VerticalAlignment="Top" Height="Auto" FontWeight="Bold" FontFamily="Segoe UI" Name="textBlockTittleDisplay6" Text="{Binding LabelDisplay6Tittle}"/>
                        <sharpGL:OpenGLControl  Grid.Column="1" Grid.Row="1"  HorizontalAlignment="Stretch" Name="openGLControl1"  Resized="openGLControl1_Resized" OpenGLInitialized="openGLControl1_Initialized" IsEnabled="True" Visibility="Visible" />
                        <sharpGL:OpenGLControl  Grid.Column="3" Grid.Row="1"  HorizontalAlignment="Stretch" Name="openGLControl2"  Resized="openGLControl2_Resized" OpenGLInitialized="openGLControl2_Initialized" IsEnabled="True" Visibility="Visible" />
                        <sharpGL:OpenGLControl  Grid.Column="1" Grid.Row="3"  HorizontalAlignment="Stretch" Name="openGLControl3"  Resized="openGLControl3_Resized" OpenGLInitialized="openGLControl3_Initialized" IsEnabled="True" Visibility="Visible" />
                        <sharpGL:OpenGLControl  Grid.Column="3" Grid.Row="3"  HorizontalAlignment="Stretch" Name="openGLControl4"  Resized="openGLControl4_Resized" OpenGLInitialized="openGLControl4_Initialized" IsEnabled="True" Visibility="Visible" />
                        <sharpGL:OpenGLControl  Grid.Column="1" Grid.Row="5"  HorizontalAlignment="Stretch" Name="openGLControl5"  Resized="openGLControl5_Resized" OpenGLInitialized="openGLControl5_Initialized" IsEnabled="True" Visibility="Visible" />
                        <sharpGL:OpenGLControl  Grid.Column="3" Grid.Row="5"  HorizontalAlignment="Stretch" Name="openGLControl6"  Resized="openGLControl6_Resized" OpenGLInitialized="openGLControl6_Initialized" IsEnabled="True" Visibility="Visible" />
                    </Grid>
                    
                </ScrollViewer>
            </Grid>
             
        </StackPanel>

    </Grid>
</Window>
